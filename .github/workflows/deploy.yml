name: Deploy to Server

on:
  push:
    branches:
      - main  # Change to your default branch if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Notify Deployment Start
      - name: Notify Deployment Start
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          embed-title: "üöÄ Deployment Started"
          embed-description: "Automated deployment started."
          embed-color: 16776960

      # Step 3: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 4: Deploy via SSH with zero-downtime build
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          timeout: 45m
          command_timeout: 40m
          script: |
            set -e
            echo "Starting deployment process..."

            # Navigate to project directory
            cd eip-client/EIPsInsight
            echo "Current directory: $(pwd)"

            # Reset git and pull latest
            git reset --hard
            git fetch --all
            git reset --hard origin/main

            # Install dependencies with retry logic
            for i in {1..3}; do
              echo "Server install attempt $i..."
              if npm ci --force --legacy-peer-deps; then
                echo "npm install succeeded"
                break
              else
                echo "npm install failed, cleaning cache and retrying..."
                npm cache clean --force
                sleep 30
                if [ $i -eq 3 ]; then
                  echo "‚ùå npm install failed after 3 attempts, aborting deployment"
                  exit 1
                fi
              fi
            done

            # Build in temporary folder
            TEMP_DIR=".next_temp"
            rm -rf $TEMP_DIR
            mkdir -p $TEMP_DIR

            echo "Building project..."
            if npm run build -- --output $TEMP_DIR; then
              echo "‚úÖ Build successful"
            else
              echo "‚ùå Build failed, aborting deployment"
              exit 1
            fi

            # Atomic swap for zero downtime
            if [ -d ".next" ]; then
              mv .next .next_old
            fi
            mv $TEMP_DIR .next

            # Reload PM2 gracefully
            if ! pm2 reload 39; then
              echo "‚ö†Ô∏è PM2 reload failed, trying to start..."
              pm2 start npm --name "eips-insight" -- start
            fi

            # Remove old build folder
            rm -rf .next_old

            echo "Deployment completed successfully!"

      # Step 5: Notify Discord on Success
      - name: Discord Notification - Success
        if: success()
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          embed-title: "‚úÖ Deployment Successful"
          embed-description: |
            **Branch:** ${{ github.ref_name }}
            **Repository:** ${{ github.repository }}
            **Commit:** [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            üéâ Deployment completed successfully without downtime!
          embed-color: 3066993
          embed-footer-text: "GitHub Actions ‚Ä¢ Deployment Bot"
          embed-timestamp: ${{ github.event.head_commit.timestamp }}

      # Step 6: Notify Discord on Failure
      - name: Discord Notification - Failure
        if: failure()
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          embed-title: "‚ùå Deployment Failed"
          embed-description: |
            **Branch:** ${{ github.ref_name }}
            **Repository:** ${{ github.repository }}
            **Commit:** [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            ‚ö†Ô∏è Deployment failed! Check GitHub Actions logs for details.
          embed-color: 15158332
          embed-footer-text: "GitHub Actions ‚Ä¢ Deployment Bot"
          embed-timestamp: ${{ github.event.head_commit.timestamp }}
